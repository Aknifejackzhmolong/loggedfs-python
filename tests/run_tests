#!/bin/bash

# Root folder for running tests
fs_root=loggedfs_test_root
log_file=test.log
config_file=test.xml
prefix=[LOGGEDFS_TEST]
uid=$(id -u)
gid=$(id -g)

# Store full path of future mountpoint
fs_root_fullpath=$(pwd)/$fs_root
# Store full path of test folder
test_root_fullpath=$(pwd)

# Umount potential remainder of old tests
mountpoint -q $fs_root
if [ $? == 0 ]
then
	echo "$prefix Forceful umount of \"$fs_root_fullpath\" before test required ..."
	sudo umount -f $fs_root_fullpath
	if [ $? == 0 ]
	then
		echo "$prefix  ... done."
	else
		echo "$prefix  ... failed!"
		exit 1
	fi
fi
# Remove folder
if [ -d "$fs_root" ]; then rm -rf $fs_root; fi
# Remove old log
rm -f $logfile

# Create folder for test file system
mkdir $fs_root
# Verbosity
echo "$prefix \"loggedfs -l $log_file $fs_root\" ..."
# Mount folder with loggedfs TODO ADD -c $config_file
loggedfs -l $log_file $fs_root
# Check mountpoint and exit if it was not mounted
mountpoint -q $fs_root
if ! [ $? == 0 ]
then
	echo "$prefix  ... failed!"
	exit 1
else
	echo "$prefix  ... done."
fi
# Change into the filesystem
cd $fs_root
# Verbosity
echo "$prefix In: \"$(pwd)\""

# Verbosity
echo "$prefix \"prove -r ../fstest/tests/\" ..."
# Run tests
prove -r $test_root_fullpath/fstest/
if ! [ $? == 0 ]
then
	echo "$prefix  ... failed!"
	fstest_status=1
else
	echo "$prefix  ... done."
	fstest_status=0
fi

# Leave the filesystem
cd ..
# Verbosity
echo "$prefix \"fusemount -u $fs_root_fullpath\" ..."
# Umount it
fusermount -u $fs_root_fullpath
if [ $? == 0 ]
then
	echo "$prefix  ... GOOD exit status ..."
else
	echo "$prefix  ... BAD exit status ..."
fi
# Check mountpoint and exit if it was mounted
mountpoint -q $fs_root
if [ $? == 0 ]
then
	echo "$prefix  ... still mounted!"
	exit 1
else
	echo "$prefix  ... not mounted."
fi

# Exit with status of fstest
exit $fstest_status
